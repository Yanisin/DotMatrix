!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BINARY	Makefile	/^BINARY = main$/;"	m
BOARD_HEIGHT	life.c	19;"	d	file:
BOARD_WIDTH	life.c	20;"	d	file:
BOTTOM_EDGE	life.c	/^	BOTTOM_EDGE,$/;"	e	enum:board_edge	file:
BUF_SIZE	cdcacm.c	31;"	d	file:
BUF_SIZE	usart_buffered.c	33;"	d	file:
COLOR_DEPTH	disp.c	12;"	d	file:
DISP_COLS_CLK_AF_NUM	hw_defs_38x38_rev_0_1.h	49;"	d
DISP_COLS_CLK_AF_NUM	hw_defs_38x38_rev_0_3.h	29;"	d
DISP_COLS_CLK_AF_NUM	hw_defs_60x60_rev_0_2.h	49;"	d
DISP_COLS_CLK_AF_NUM	hw_defs_60x60_rev_0_4.h	31;"	d
DISP_COLS_CLK_GPIO	hw_defs_38x38_rev_0_1.h	47;"	d
DISP_COLS_CLK_GPIO	hw_defs_38x38_rev_0_3.h	27;"	d
DISP_COLS_CLK_GPIO	hw_defs_60x60_rev_0_2.h	47;"	d
DISP_COLS_CLK_GPIO	hw_defs_60x60_rev_0_4.h	29;"	d
DISP_COLS_CLK_GPIOP	hw_defs_38x38_rev_0_1.h	48;"	d
DISP_COLS_CLK_GPIOP	hw_defs_38x38_rev_0_3.h	28;"	d
DISP_COLS_CLK_GPIOP	hw_defs_60x60_rev_0_2.h	48;"	d
DISP_COLS_CLK_GPIO_PIN	hw_defs_60x60_rev_0_4.h	30;"	d
DISP_COLS_DATA_AF_NUM	hw_defs_38x38_rev_0_1.h	53;"	d
DISP_COLS_DATA_AF_NUM	hw_defs_38x38_rev_0_3.h	33;"	d
DISP_COLS_DATA_AF_NUM	hw_defs_60x60_rev_0_2.h	53;"	d
DISP_COLS_DATA_AF_NUM	hw_defs_60x60_rev_0_4.h	35;"	d
DISP_COLS_DATA_BACKWARDS	hw_defs_60x60_rev_0_2.h	58;"	d
DISP_COLS_DATA_GPIO	hw_defs_38x38_rev_0_1.h	51;"	d
DISP_COLS_DATA_GPIO	hw_defs_38x38_rev_0_3.h	31;"	d
DISP_COLS_DATA_GPIO	hw_defs_60x60_rev_0_2.h	51;"	d
DISP_COLS_DATA_GPIO	hw_defs_60x60_rev_0_4.h	33;"	d
DISP_COLS_DATA_GPIOP	hw_defs_38x38_rev_0_1.h	52;"	d
DISP_COLS_DATA_GPIOP	hw_defs_38x38_rev_0_3.h	32;"	d
DISP_COLS_DATA_GPIOP	hw_defs_60x60_rev_0_2.h	52;"	d
DISP_COLS_DATA_GPIO_PIN	hw_defs_60x60_rev_0_4.h	34;"	d
DISP_COLS_GPIO_RCC	hw_defs_38x38_rev_0_1.h	44;"	d
DISP_COLS_GPIO_RCC	hw_defs_38x38_rev_0_3.h	24;"	d
DISP_COLS_GPIO_RCC	hw_defs_60x60_rev_0_2.h	44;"	d
DISP_COLS_GPIO_RCC	hw_defs_60x60_rev_0_4.h	26;"	d
DISP_COLS_NUM	hw_defs_38x38_rev_0_1.h	14;"	d
DISP_COLS_NUM	hw_defs_38x38_rev_0_3.h	14;"	d
DISP_COLS_NUM	hw_defs_60x60_rev_0_2.h	14;"	d
DISP_COLS_NUM	hw_defs_60x60_rev_0_4.h	14;"	d
DISP_COLS_SPI	hw_defs_38x38_rev_0_1.h	43;"	d
DISP_COLS_SPI	hw_defs_38x38_rev_0_3.h	23;"	d
DISP_COLS_SPI	hw_defs_60x60_rev_0_2.h	43;"	d
DISP_COLS_SPI	hw_defs_60x60_rev_0_4.h	25;"	d
DISP_COLS_SPI_RCC	hw_defs_38x38_rev_0_1.h	45;"	d
DISP_COLS_SPI_RCC	hw_defs_38x38_rev_0_3.h	25;"	d
DISP_COLS_SPI_RCC	hw_defs_60x60_rev_0_2.h	45;"	d
DISP_COLS_SPI_RCC	hw_defs_60x60_rev_0_4.h	27;"	d
DISP_COLS_STROBE_AF_NUM	hw_defs_38x38_rev_0_3.h	37;"	d
DISP_COLS_STROBE_AF_NUM	hw_defs_60x60_rev_0_4.h	39;"	d
DISP_COLS_STROBE_GPIO	hw_defs_38x38_rev_0_1.h	55;"	d
DISP_COLS_STROBE_GPIO	hw_defs_38x38_rev_0_3.h	36;"	d
DISP_COLS_STROBE_GPIO	hw_defs_60x60_rev_0_2.h	55;"	d
DISP_COLS_STROBE_GPIO	hw_defs_60x60_rev_0_4.h	37;"	d
DISP_COLS_STROBE_GPIOP	hw_defs_38x38_rev_0_1.h	56;"	d
DISP_COLS_STROBE_GPIOP	hw_defs_38x38_rev_0_3.h	35;"	d
DISP_COLS_STROBE_GPIOP	hw_defs_60x60_rev_0_2.h	56;"	d
DISP_COLS_STROBE_GPIO_PIN	hw_defs_60x60_rev_0_4.h	38;"	d
DISP_GPIOP_ROW0	hw_defs_38x38_rev_0_1.h	19;"	d
DISP_GPIOP_ROW0	hw_defs_60x60_rev_0_2.h	19;"	d
DISP_GPIOP_ROW1	hw_defs_38x38_rev_0_1.h	22;"	d
DISP_GPIOP_ROW1	hw_defs_60x60_rev_0_2.h	22;"	d
DISP_GPIOP_ROW2	hw_defs_38x38_rev_0_1.h	25;"	d
DISP_GPIOP_ROW2	hw_defs_60x60_rev_0_2.h	25;"	d
DISP_GPIOP_ROW3	hw_defs_38x38_rev_0_1.h	28;"	d
DISP_GPIOP_ROW3	hw_defs_60x60_rev_0_2.h	28;"	d
DISP_GPIOP_ROW4	hw_defs_38x38_rev_0_1.h	31;"	d
DISP_GPIOP_ROW4	hw_defs_60x60_rev_0_2.h	31;"	d
DISP_GPIOP_ROW5	hw_defs_38x38_rev_0_1.h	34;"	d
DISP_GPIOP_ROW5	hw_defs_60x60_rev_0_2.h	34;"	d
DISP_GPIOP_ROW6	hw_defs_38x38_rev_0_1.h	37;"	d
DISP_GPIOP_ROW6	hw_defs_60x60_rev_0_2.h	37;"	d
DISP_GPIOP_ROW7	hw_defs_38x38_rev_0_1.h	40;"	d
DISP_GPIOP_ROW7	hw_defs_60x60_rev_0_2.h	40;"	d
DISP_GPIOP_nOE_COL	hw_defs_38x38_rev_0_3.h	19;"	d
DISP_GPIOP_nOE_ROW	hw_defs_38x38_rev_0_3.h	18;"	d
DISP_GPIOS_RCC	hw_defs_38x38_rev_0_3.h	16;"	d
DISP_GPIOS_RCC	hw_defs_60x60_rev_0_4.h	16;"	d
DISP_GPIO_ROW0	hw_defs_38x38_rev_0_1.h	18;"	d
DISP_GPIO_ROW0	hw_defs_60x60_rev_0_2.h	18;"	d
DISP_GPIO_ROW1	hw_defs_38x38_rev_0_1.h	21;"	d
DISP_GPIO_ROW1	hw_defs_60x60_rev_0_2.h	21;"	d
DISP_GPIO_ROW2	hw_defs_38x38_rev_0_1.h	24;"	d
DISP_GPIO_ROW2	hw_defs_60x60_rev_0_2.h	24;"	d
DISP_GPIO_ROW3	hw_defs_38x38_rev_0_1.h	27;"	d
DISP_GPIO_ROW3	hw_defs_60x60_rev_0_2.h	27;"	d
DISP_GPIO_ROW4	hw_defs_38x38_rev_0_1.h	30;"	d
DISP_GPIO_ROW4	hw_defs_60x60_rev_0_2.h	30;"	d
DISP_GPIO_ROW5	hw_defs_38x38_rev_0_1.h	33;"	d
DISP_GPIO_ROW5	hw_defs_60x60_rev_0_2.h	33;"	d
DISP_GPIO_ROW6	hw_defs_38x38_rev_0_1.h	36;"	d
DISP_GPIO_ROW6	hw_defs_60x60_rev_0_2.h	36;"	d
DISP_GPIO_ROW7	hw_defs_38x38_rev_0_1.h	39;"	d
DISP_GPIO_ROW7	hw_defs_60x60_rev_0_2.h	39;"	d
DISP_GPIO_nOE_COL	hw_defs_38x38_rev_0_3.h	21;"	d
DISP_GPIO_nOE_ROW	hw_defs_38x38_rev_0_3.h	20;"	d
DISP_H	disp.h	2;"	d
DISP_ROWS_NUM	hw_defs_38x38_rev_0_1.h	13;"	d
DISP_ROWS_NUM	hw_defs_38x38_rev_0_3.h	13;"	d
DISP_ROWS_NUM	hw_defs_60x60_rev_0_2.h	13;"	d
DISP_ROWS_NUM	hw_defs_60x60_rev_0_4.h	13;"	d
DISP_ROWS_RCC	hw_defs_38x38_rev_0_1.h	16;"	d
DISP_ROWS_RCC	hw_defs_60x60_rev_0_2.h	16;"	d
DISP_SPI_H	disp_spi.h	2;"	d
DISP_nOE_COL_GPIO	hw_defs_60x60_rev_0_4.h	21;"	d
DISP_nOE_COL_GPIO_PIN	hw_defs_60x60_rev_0_4.h	23;"	d
DISP_nOE_ROW_GPIO	hw_defs_60x60_rev_0_4.h	20;"	d
DISP_nOE_ROW_GPIO_PIN	hw_defs_60x60_rev_0_4.h	22;"	d
DMA_ROW_LEN	disp.c	14;"	d	file:
DOTS_H	dots.h	2;"	d
DOT_ADD_TRESHOLD	dots.c	11;"	d	file:
EIGHT	wordclock.c	/^	EIGHT,$/;"	e	enum:words	file:
ELEVEN	wordclock.c	/^	ELEVEN,$/;"	e	enum:words	file:
EVERY_N_TICK	dots.c	12;"	d	file:
FIVE	wordclock.c	/^	FIVE,$/;"	e	enum:words	file:
FOUR	wordclock.c	/^	FOUR,$/;"	e	enum:words	file:
HIGHLIFE	life.c	39;"	d	file:
HW_DEFS_38X38_REV_0_1_H	hw_defs_38x38_rev_0_1.h	2;"	d
HW_DEFS_38X38_REV_0_3_H	hw_defs_38x38_rev_0_3.h	2;"	d
HW_DEFS_38X38_REV_0_3_H	hw_defs_60x60_rev_0_4.h	2;"	d
HW_DEFS_60X60_REV_0_2_H	hw_defs_60x60_rev_0_2.h	2;"	d
HW_DEFS_H	hw_defs.h	2;"	d
HW_VERSION	Makefile	/^HW_VERSION = "HW_60x60_rev_0_4"$/;"	m
LDSCRIPT	Makefile	/^LDSCRIPT = ..\/stm32f070.ld$/;"	m
LEFT_EDGE	life.c	/^	LEFT_EDGE,$/;"	e	enum:board_edge	file:
LIFE_CELL	life.c	50;"	d	file:
LIFE_CELL	life.c	52;"	d	file:
LIFE_TICK	life.c	22;"	d	file:
MAX_DOTS	dots.c	10;"	d	file:
MFIVE	wordclock.c	/^	MFIVE,$/;"	e	enum:words	file:
MHALF	wordclock.c	/^	MHALF,$/;"	e	enum:words	file:
MONOCHROME	life.c	40;"	d	file:
MPAST	wordclock.c	/^	MPAST,$/;"	e	enum:words	file:
MQUARTER	wordclock.c	/^	MQUARTER,$/;"	e	enum:words	file:
MSG_SEQ_FIRST	life.c	46;"	d	file:
MSG_SEQ_MASK	life.c	45;"	d	file:
MSG_SEQ_SECND	life.c	47;"	d	file:
MSG_TYPE_EDGE	life.c	43;"	d	file:
MSG_TYPE_MASK	life.c	42;"	d	file:
MSG_TYPE_TICK	life.c	44;"	d	file:
MTEN	wordclock.c	/^	MTEN,$/;"	e	enum:words	file:
MTO	wordclock.c	/^	MTO$/;"	e	enum:words	file:
MTWENTY	wordclock.c	/^	MTWENTY,$/;"	e	enum:words	file:
NINE	wordclock.c	/^	NINE,$/;"	e	enum:words	file:
NUM_BLANKS	disp.c	13;"	d	file:
NUM_EDGES	life.c	/^	NUM_EDGES$/;"	e	enum:board_edge	file:
OBJS	Makefile	/^OBJS= disp.o disp_spi.o ticker.o rand.o usart_buffered.o spi_dma.o applet.o$/;"	m
ONE	wordclock.c	/^	ONE,$/;"	e	enum:words	file:
PIN_LED	main.c	28;"	d	file:
PORT_LED	main.c	27;"	d	file:
RAND_H	rand.h	2;"	d
RIGHT_EDGE	life.c	/^	RIGHT_EDGE,$/;"	e	enum:board_edge	file:
SET_TIME	rtc.c	/^	SET_TIME,$/;"	e	enum:worker_state	file:
SEVEN	wordclock.c	/^	SEVEN,$/;"	e	enum:words	file:
SIX	wordclock.c	/^	SIX,$/;"	e	enum:words	file:
TEN	wordclock.c	/^	TEN,$/;"	e	enum:words	file:
THREE	wordclock.c	/^	THREE,$/;"	e	enum:words	file:
TICKER_H	ticker.h	2;"	d
TOPDIR	Makefile	/^TOPDIR = $(shell pwd)$/;"	m
TOP_EDGE	life.c	/^	TOP_EDGE = 0,$/;"	e	enum:board_edge	file:
TWELVE	wordclock.c	/^	TWELVE,$/;"	e	enum:words	file:
TWO	wordclock.c	/^	TWO,$/;"	e	enum:words	file:
USART_A	hw_defs_38x38_rev_0_3.h	46;"	d
USART_A	hw_defs_60x60_rev_0_4.h	48;"	d
USART_A_IRQ	hw_defs_38x38_rev_0_3.h	49;"	d
USART_A_IRQ	hw_defs_60x60_rev_0_4.h	51;"	d
USART_A_RCC	hw_defs_38x38_rev_0_3.h	48;"	d
USART_A_RCC	hw_defs_60x60_rev_0_4.h	50;"	d
USART_A_REG	hw_defs_38x38_rev_0_3.h	47;"	d
USART_A_REG	hw_defs_60x60_rev_0_4.h	49;"	d
USART_A_RX_AF_NUM	hw_defs_38x38_rev_0_3.h	53;"	d
USART_A_RX_AF_NUM	hw_defs_60x60_rev_0_4.h	55;"	d
USART_A_RX_PIN	hw_defs_38x38_rev_0_3.h	52;"	d
USART_A_RX_PIN	hw_defs_60x60_rev_0_4.h	54;"	d
USART_A_RX_PORT	hw_defs_38x38_rev_0_3.h	51;"	d
USART_A_RX_PORT	hw_defs_60x60_rev_0_4.h	53;"	d
USART_A_RX_RCC	hw_defs_38x38_rev_0_3.h	50;"	d
USART_A_RX_RCC	hw_defs_60x60_rev_0_4.h	52;"	d
USART_A_TX_AF_NUM	hw_defs_38x38_rev_0_3.h	57;"	d
USART_A_TX_AF_NUM	hw_defs_60x60_rev_0_4.h	59;"	d
USART_A_TX_PIN	hw_defs_38x38_rev_0_3.h	56;"	d
USART_A_TX_PIN	hw_defs_60x60_rev_0_4.h	58;"	d
USART_A_TX_PORT	hw_defs_38x38_rev_0_3.h	55;"	d
USART_A_TX_PORT	hw_defs_60x60_rev_0_4.h	57;"	d
USART_A_TX_RCC	hw_defs_38x38_rev_0_3.h	54;"	d
USART_A_TX_RCC	hw_defs_60x60_rev_0_4.h	56;"	d
USART_B	hw_defs_38x38_rev_0_3.h	59;"	d
USART_B	hw_defs_60x60_rev_0_4.h	61;"	d
USART_BAUDRATE	hw_defs_38x38_rev_0_1.h	63;"	d
USART_BAUDRATE	hw_defs_38x38_rev_0_3.h	44;"	d
USART_BAUDRATE	hw_defs_60x60_rev_0_2.h	65;"	d
USART_BAUDRATE	hw_defs_60x60_rev_0_4.h	46;"	d
USART_BUFFERED_H	usart_buffered.h	2;"	d
USART_B_IRQ	hw_defs_38x38_rev_0_3.h	62;"	d
USART_B_IRQ	hw_defs_60x60_rev_0_4.h	64;"	d
USART_B_RCC	hw_defs_38x38_rev_0_3.h	61;"	d
USART_B_RCC	hw_defs_60x60_rev_0_4.h	63;"	d
USART_B_REG	hw_defs_38x38_rev_0_3.h	60;"	d
USART_B_REG	hw_defs_60x60_rev_0_4.h	62;"	d
USART_B_RX_AF_NUM	hw_defs_38x38_rev_0_3.h	66;"	d
USART_B_RX_AF_NUM	hw_defs_60x60_rev_0_4.h	68;"	d
USART_B_RX_PIN	hw_defs_38x38_rev_0_3.h	65;"	d
USART_B_RX_PIN	hw_defs_60x60_rev_0_4.h	67;"	d
USART_B_RX_PORT	hw_defs_38x38_rev_0_3.h	64;"	d
USART_B_RX_PORT	hw_defs_60x60_rev_0_4.h	66;"	d
USART_B_RX_RCC	hw_defs_38x38_rev_0_3.h	63;"	d
USART_B_RX_RCC	hw_defs_60x60_rev_0_4.h	65;"	d
USART_B_TX_AF_NUM	hw_defs_38x38_rev_0_3.h	70;"	d
USART_B_TX_AF_NUM	hw_defs_60x60_rev_0_4.h	72;"	d
USART_B_TX_PIN	hw_defs_38x38_rev_0_3.h	69;"	d
USART_B_TX_PIN	hw_defs_60x60_rev_0_4.h	71;"	d
USART_B_TX_PORT	hw_defs_38x38_rev_0_3.h	68;"	d
USART_B_TX_PORT	hw_defs_60x60_rev_0_4.h	70;"	d
USART_B_TX_RCC	hw_defs_38x38_rev_0_3.h	67;"	d
USART_B_TX_RCC	hw_defs_60x60_rev_0_4.h	69;"	d
USART_C	hw_defs_38x38_rev_0_3.h	72;"	d
USART_C	hw_defs_60x60_rev_0_4.h	74;"	d
USART_C_IRQ	hw_defs_38x38_rev_0_3.h	75;"	d
USART_C_IRQ	hw_defs_60x60_rev_0_4.h	77;"	d
USART_C_RCC	hw_defs_38x38_rev_0_3.h	74;"	d
USART_C_RCC	hw_defs_60x60_rev_0_4.h	76;"	d
USART_C_REG	hw_defs_38x38_rev_0_3.h	73;"	d
USART_C_REG	hw_defs_60x60_rev_0_4.h	75;"	d
USART_C_RX_AF_NUM	hw_defs_38x38_rev_0_3.h	79;"	d
USART_C_RX_AF_NUM	hw_defs_60x60_rev_0_4.h	81;"	d
USART_C_RX_PIN	hw_defs_38x38_rev_0_3.h	78;"	d
USART_C_RX_PIN	hw_defs_60x60_rev_0_4.h	80;"	d
USART_C_RX_PORT	hw_defs_38x38_rev_0_3.h	77;"	d
USART_C_RX_PORT	hw_defs_60x60_rev_0_4.h	79;"	d
USART_C_RX_RCC	hw_defs_38x38_rev_0_3.h	76;"	d
USART_C_RX_RCC	hw_defs_60x60_rev_0_4.h	78;"	d
USART_C_TX_AF_NUM	hw_defs_38x38_rev_0_3.h	83;"	d
USART_C_TX_AF_NUM	hw_defs_60x60_rev_0_4.h	85;"	d
USART_C_TX_PIN	hw_defs_38x38_rev_0_3.h	82;"	d
USART_C_TX_PIN	hw_defs_60x60_rev_0_4.h	84;"	d
USART_C_TX_PORT	hw_defs_38x38_rev_0_3.h	81;"	d
USART_C_TX_PORT	hw_defs_60x60_rev_0_4.h	83;"	d
USART_C_TX_RCC	hw_defs_38x38_rev_0_3.h	80;"	d
USART_C_TX_RCC	hw_defs_60x60_rev_0_4.h	82;"	d
USART_D	hw_defs_38x38_rev_0_3.h	85;"	d
USART_D	hw_defs_60x60_rev_0_4.h	87;"	d
USART_DIR_DOWN	hw_defs_38x38_rev_0_1.h	70;"	d
USART_DIR_DOWN	hw_defs_38x38_rev_0_3.h	99;"	d
USART_DIR_DOWN	hw_defs_60x60_rev_0_2.h	72;"	d
USART_DIR_DOWN	hw_defs_60x60_rev_0_4.h	101;"	d
USART_DIR_LEFT	hw_defs_38x38_rev_0_1.h	71;"	d
USART_DIR_LEFT	hw_defs_38x38_rev_0_3.h	100;"	d
USART_DIR_LEFT	hw_defs_60x60_rev_0_2.h	73;"	d
USART_DIR_LEFT	hw_defs_60x60_rev_0_4.h	102;"	d
USART_DIR_RIGHT	hw_defs_38x38_rev_0_1.h	72;"	d
USART_DIR_RIGHT	hw_defs_38x38_rev_0_3.h	101;"	d
USART_DIR_RIGHT	hw_defs_60x60_rev_0_2.h	74;"	d
USART_DIR_RIGHT	hw_defs_60x60_rev_0_4.h	103;"	d
USART_DIR_UP	hw_defs_38x38_rev_0_1.h	69;"	d
USART_DIR_UP	hw_defs_38x38_rev_0_3.h	98;"	d
USART_DIR_UP	hw_defs_60x60_rev_0_2.h	71;"	d
USART_DIR_UP	hw_defs_60x60_rev_0_4.h	100;"	d
USART_DOWN	hw_defs_38x38_rev_0_1.h	86;"	d
USART_DOWN	hw_defs_60x60_rev_0_2.h	88;"	d
USART_DOWN_IRQ	hw_defs_38x38_rev_0_1.h	88;"	d
USART_DOWN_IRQ	hw_defs_60x60_rev_0_2.h	90;"	d
USART_DOWN_RCC	hw_defs_38x38_rev_0_1.h	87;"	d
USART_DOWN_RCC	hw_defs_60x60_rev_0_2.h	89;"	d
USART_DOWN_RX_AF_NUM	hw_defs_38x38_rev_0_1.h	92;"	d
USART_DOWN_RX_AF_NUM	hw_defs_60x60_rev_0_2.h	94;"	d
USART_DOWN_RX_PIN	hw_defs_38x38_rev_0_1.h	91;"	d
USART_DOWN_RX_PIN	hw_defs_60x60_rev_0_2.h	93;"	d
USART_DOWN_RX_PORT	hw_defs_38x38_rev_0_1.h	90;"	d
USART_DOWN_RX_PORT	hw_defs_60x60_rev_0_2.h	92;"	d
USART_DOWN_RX_RCC	hw_defs_38x38_rev_0_1.h	89;"	d
USART_DOWN_RX_RCC	hw_defs_60x60_rev_0_2.h	91;"	d
USART_DOWN_TX_AF_NUM	hw_defs_38x38_rev_0_1.h	96;"	d
USART_DOWN_TX_AF_NUM	hw_defs_60x60_rev_0_2.h	98;"	d
USART_DOWN_TX_PIN	hw_defs_38x38_rev_0_1.h	95;"	d
USART_DOWN_TX_PIN	hw_defs_60x60_rev_0_2.h	97;"	d
USART_DOWN_TX_PORT	hw_defs_38x38_rev_0_1.h	94;"	d
USART_DOWN_TX_PORT	hw_defs_60x60_rev_0_2.h	96;"	d
USART_DOWN_TX_RCC	hw_defs_38x38_rev_0_1.h	93;"	d
USART_DOWN_TX_RCC	hw_defs_60x60_rev_0_2.h	95;"	d
USART_D_IRQ	hw_defs_38x38_rev_0_3.h	88;"	d
USART_D_IRQ	hw_defs_60x60_rev_0_4.h	90;"	d
USART_D_RCC	hw_defs_38x38_rev_0_3.h	87;"	d
USART_D_RCC	hw_defs_60x60_rev_0_4.h	89;"	d
USART_D_REG	hw_defs_38x38_rev_0_3.h	86;"	d
USART_D_REG	hw_defs_60x60_rev_0_4.h	88;"	d
USART_D_RX_AF_NUM	hw_defs_38x38_rev_0_3.h	92;"	d
USART_D_RX_AF_NUM	hw_defs_60x60_rev_0_4.h	94;"	d
USART_D_RX_PIN	hw_defs_38x38_rev_0_3.h	91;"	d
USART_D_RX_PIN	hw_defs_60x60_rev_0_4.h	93;"	d
USART_D_RX_PORT	hw_defs_38x38_rev_0_3.h	90;"	d
USART_D_RX_PORT	hw_defs_60x60_rev_0_4.h	92;"	d
USART_D_RX_RCC	hw_defs_38x38_rev_0_3.h	89;"	d
USART_D_RX_RCC	hw_defs_60x60_rev_0_4.h	91;"	d
USART_D_TX_AF_NUM	hw_defs_38x38_rev_0_3.h	96;"	d
USART_D_TX_AF_NUM	hw_defs_60x60_rev_0_4.h	98;"	d
USART_D_TX_PIN	hw_defs_38x38_rev_0_3.h	95;"	d
USART_D_TX_PIN	hw_defs_60x60_rev_0_4.h	97;"	d
USART_D_TX_PORT	hw_defs_38x38_rev_0_3.h	94;"	d
USART_D_TX_PORT	hw_defs_60x60_rev_0_4.h	96;"	d
USART_D_TX_RCC	hw_defs_38x38_rev_0_3.h	93;"	d
USART_D_TX_RCC	hw_defs_60x60_rev_0_4.h	95;"	d
USART_LEFT	hw_defs_38x38_rev_0_1.h	98;"	d
USART_LEFT	hw_defs_60x60_rev_0_2.h	100;"	d
USART_LEFT_IRQ	hw_defs_38x38_rev_0_1.h	100;"	d
USART_LEFT_IRQ	hw_defs_60x60_rev_0_2.h	102;"	d
USART_LEFT_RCC	hw_defs_38x38_rev_0_1.h	99;"	d
USART_LEFT_RCC	hw_defs_60x60_rev_0_2.h	101;"	d
USART_LEFT_RX_AF_NUM	hw_defs_38x38_rev_0_1.h	104;"	d
USART_LEFT_RX_AF_NUM	hw_defs_60x60_rev_0_2.h	106;"	d
USART_LEFT_RX_PIN	hw_defs_38x38_rev_0_1.h	103;"	d
USART_LEFT_RX_PIN	hw_defs_60x60_rev_0_2.h	105;"	d
USART_LEFT_RX_PORT	hw_defs_38x38_rev_0_1.h	102;"	d
USART_LEFT_RX_PORT	hw_defs_60x60_rev_0_2.h	104;"	d
USART_LEFT_RX_RCC	hw_defs_38x38_rev_0_1.h	101;"	d
USART_LEFT_RX_RCC	hw_defs_60x60_rev_0_2.h	103;"	d
USART_LEFT_TX_AF_NUM	hw_defs_38x38_rev_0_1.h	108;"	d
USART_LEFT_TX_AF_NUM	hw_defs_60x60_rev_0_2.h	110;"	d
USART_LEFT_TX_PIN	hw_defs_38x38_rev_0_1.h	107;"	d
USART_LEFT_TX_PIN	hw_defs_60x60_rev_0_2.h	109;"	d
USART_LEFT_TX_PORT	hw_defs_38x38_rev_0_1.h	106;"	d
USART_LEFT_TX_PORT	hw_defs_60x60_rev_0_2.h	108;"	d
USART_LEFT_TX_RCC	hw_defs_38x38_rev_0_1.h	105;"	d
USART_LEFT_TX_RCC	hw_defs_60x60_rev_0_2.h	107;"	d
USART_RIGHT	hw_defs_38x38_rev_0_1.h	110;"	d
USART_RIGHT	hw_defs_60x60_rev_0_2.h	112;"	d
USART_RIGHT_IRQ	hw_defs_38x38_rev_0_1.h	112;"	d
USART_RIGHT_IRQ	hw_defs_60x60_rev_0_2.h	114;"	d
USART_RIGHT_RCC	hw_defs_38x38_rev_0_1.h	111;"	d
USART_RIGHT_RCC	hw_defs_60x60_rev_0_2.h	113;"	d
USART_RIGHT_RX_AF_NUM	hw_defs_38x38_rev_0_1.h	116;"	d
USART_RIGHT_RX_AF_NUM	hw_defs_60x60_rev_0_2.h	118;"	d
USART_RIGHT_RX_PIN	hw_defs_38x38_rev_0_1.h	115;"	d
USART_RIGHT_RX_PIN	hw_defs_60x60_rev_0_2.h	117;"	d
USART_RIGHT_RX_PORT	hw_defs_38x38_rev_0_1.h	114;"	d
USART_RIGHT_RX_PORT	hw_defs_60x60_rev_0_2.h	116;"	d
USART_RIGHT_RX_RCC	hw_defs_38x38_rev_0_1.h	113;"	d
USART_RIGHT_RX_RCC	hw_defs_60x60_rev_0_2.h	115;"	d
USART_RIGHT_TX_AF_NUM	hw_defs_38x38_rev_0_1.h	120;"	d
USART_RIGHT_TX_AF_NUM	hw_defs_60x60_rev_0_2.h	122;"	d
USART_RIGHT_TX_PIN	hw_defs_38x38_rev_0_1.h	119;"	d
USART_RIGHT_TX_PIN	hw_defs_60x60_rev_0_2.h	121;"	d
USART_RIGHT_TX_PORT	hw_defs_38x38_rev_0_1.h	118;"	d
USART_RIGHT_TX_PORT	hw_defs_60x60_rev_0_2.h	120;"	d
USART_RIGHT_TX_RCC	hw_defs_38x38_rev_0_1.h	117;"	d
USART_RIGHT_TX_RCC	hw_defs_60x60_rev_0_2.h	119;"	d
USART_UP	hw_defs_38x38_rev_0_1.h	74;"	d
USART_UP	hw_defs_60x60_rev_0_2.h	76;"	d
USART_UP_IRQ	hw_defs_38x38_rev_0_1.h	76;"	d
USART_UP_IRQ	hw_defs_60x60_rev_0_2.h	78;"	d
USART_UP_RCC	hw_defs_38x38_rev_0_1.h	75;"	d
USART_UP_RCC	hw_defs_60x60_rev_0_2.h	77;"	d
USART_UP_RX_AF_NUM	hw_defs_38x38_rev_0_1.h	80;"	d
USART_UP_RX_AF_NUM	hw_defs_60x60_rev_0_2.h	82;"	d
USART_UP_RX_PIN	hw_defs_38x38_rev_0_1.h	79;"	d
USART_UP_RX_PIN	hw_defs_60x60_rev_0_2.h	81;"	d
USART_UP_RX_PORT	hw_defs_38x38_rev_0_1.h	78;"	d
USART_UP_RX_PORT	hw_defs_60x60_rev_0_2.h	80;"	d
USART_UP_RX_RCC	hw_defs_38x38_rev_0_1.h	77;"	d
USART_UP_RX_RCC	hw_defs_60x60_rev_0_2.h	79;"	d
USART_UP_TX_AF_NUM	hw_defs_38x38_rev_0_1.h	84;"	d
USART_UP_TX_AF_NUM	hw_defs_60x60_rev_0_2.h	86;"	d
USART_UP_TX_PIN	hw_defs_38x38_rev_0_1.h	83;"	d
USART_UP_TX_PIN	hw_defs_60x60_rev_0_2.h	85;"	d
USART_UP_TX_PORT	hw_defs_38x38_rev_0_1.h	82;"	d
USART_UP_TX_PORT	hw_defs_60x60_rev_0_2.h	84;"	d
USART_UP_TX_RCC	hw_defs_38x38_rev_0_1.h	81;"	d
USART_UP_TX_RCC	hw_defs_60x60_rev_0_2.h	83;"	d
WAIT_DIGIT0	rtc.c	/^	WAIT_DIGIT0,$/;"	e	enum:worker_state	file:
WAIT_DIGIT1	rtc.c	/^	WAIT_DIGIT1,$/;"	e	enum:worker_state	file:
WAIT_DIGIT2	rtc.c	/^	WAIT_DIGIT2,$/;"	e	enum:worker_state	file:
WAIT_DIGIT3	rtc.c	/^	WAIT_DIGIT3,$/;"	e	enum:worker_state	file:
WAIT_ENTRY	life.c	/^	WAIT_ENTRY,$/;"	e	enum:worker_state	file:
WAIT_TICK	life.c	/^	WAIT_TICK,$/;"	e	enum:worker_state	file:
WORKER_BUSY	life.c	/^	WORKER_BUSY,$/;"	e	enum:worker_state	file:
WORKER_IDLE	rtc.c	/^	WORKER_IDLE,$/;"	e	enum:worker_state	file:
_APPLET_H	applet.h	2;"	d
_CDCACM_H	cdcacm.h	2;"	d
_CONSOLE_H	console.h	2;"	d
_SPI_DMA_H	spi_dma.h	2;"	d
acm	cdcacm.c	/^	struct usb_cdc_acm_descriptor acm;$/;"	m	struct:__anon2	typeref:struct:__anon2::usb_cdc_acm_descriptor	file:
add_dot	dots.c	/^static void add_dot(void)$/;"	f	file:
add_random_life	life.c	/^static void add_random_life(void)$/;"	f	file:
adjacent_to	life.c	/^static int adjacent_to(int i, int j)$/;"	f	file:
applet	applet.h	/^struct applet {$/;"	s
applet_add	applet.h	9;"	d
applet_init_all	applet.c	/^void applet_init_all(void)$/;"	f
applet_run_all	applet.c	/^void applet_run_all(void)$/;"	f
bcd_time	rtc.c	/^static unsigned int bcd_time;$/;"	v	file:
bcd_to_int	wordclock.c	/^static int bcd_to_int(int bcd)$/;"	f	file:
board	life.c	/^static uint8_t board[BOARD_WIDTH+2][BOARD_HEIGHT+2];$/;"	v	file:
board_clean	life.c	/^static void board_clean(void)$/;"	f	file:
board_edge	life.c	/^enum board_edge {$/;"	g	file:
board_get	life.c	/^static int board_get(int col, int row)$/;"	f	file:
board_set	life.c	/^static void board_set(int col, int row, int val)$/;"	f	file:
bright	main.c	/^uint8_t bright[]={1,2,3,5,7,10,14, 20, 31};$/;"	v
buf	cdcacm.c	/^	uint8_t buf[BUF_SIZE];$/;"	m	struct:cdcacm_buffer	file:
buf	usart_buffered.c	/^	uint8_t buf[BUF_SIZE];$/;"	m	struct:usart_buffer	file:
call_mgmt	cdcacm.c	/^	struct usb_cdc_call_management_descriptor call_mgmt;$/;"	m	struct:__anon2	typeref:struct:__anon2::usb_cdc_call_management_descriptor	file:
cdc_union	cdcacm.c	/^	struct usb_cdc_union_descriptor cdc_union;$/;"	m	struct:__anon2	typeref:struct:__anon2::usb_cdc_union_descriptor	file:
cdcacm	cdcacm.c	/^applet_add(cdcacm);$/;"	v
cdcacm_applet	cdcacm.c	/^static const struct applet cdcacm_applet = {$/;"	v	typeref:struct:applet	file:
cdcacm_buf_empty	cdcacm.c	/^static int cdcacm_buf_empty(struct cdcacm_buffer *buf)$/;"	f	file:
cdcacm_buf_full	cdcacm.c	/^static int cdcacm_buf_full(struct cdcacm_buffer *buf)$/;"	f	file:
cdcacm_buf_get	cdcacm.c	/^static uint32_t cdcacm_buf_get(struct cdcacm_buffer *buf)$/;"	f	file:
cdcacm_buf_init	cdcacm.c	/^static void cdcacm_buf_init(struct cdcacm_buffer *buf)$/;"	f	file:
cdcacm_buf_put	cdcacm.c	/^static void cdcacm_buf_put(struct cdcacm_buffer *buf, uint8_t val)$/;"	f	file:
cdcacm_buffer	cdcacm.c	/^struct cdcacm_buffer {$/;"	s	file:
cdcacm_control_request	cdcacm.c	/^static enum usbd_request_return_codes cdcacm_control_request(usbd_device *usbd_dev, struct usb_setup_data *req, uint8_t **buf,$/;"	f	file:
cdcacm_data_rx_cb	cdcacm.c	/^static void cdcacm_data_rx_cb(usbd_device *usbd_dev, uint8_t ep)$/;"	f	file:
cdcacm_data_tx	cdcacm.c	/^static void cdcacm_data_tx(usbd_device *usbd_dev)$/;"	f	file:
cdcacm_functional_descriptors	cdcacm.c	/^} __attribute__((packed)) cdcacm_functional_descriptors = {$/;"	v	typeref:struct:__anon2	file:
cdcacm_get_char	cdcacm.c	/^uint32_t cdcacm_get_char(void)$/;"	f
cdcacm_init	cdcacm.c	/^static void cdcacm_init(void)$/;"	f	file:
cdcacm_is_on	cdcacm.c	/^int cdcacm_is_on(void)$/;"	f
cdcacm_on	cdcacm.c	/^static int cdcacm_on;$/;"	v	file:
cdcacm_rxbuf	cdcacm.c	/^static struct cdcacm_buffer cdcacm_rxbuf;$/;"	v	typeref:struct:cdcacm_buffer	file:
cdcacm_set_config	cdcacm.c	/^static void cdcacm_set_config(usbd_device *usbd_dev, uint16_t wValue)$/;"	f	file:
cdcacm_txbuf	cdcacm.c	/^static struct cdcacm_buffer cdcacm_txbuf;$/;"	v	typeref:struct:cdcacm_buffer	file:
cdcacm_usbd_dev	cdcacm.c	/^static usbd_device *cdcacm_usbd_dev;$/;"	v	file:
cdcacm_worker	cdcacm.c	/^static void cdcacm_worker(void)$/;"	f	file:
cdcacm_write_char	cdcacm.c	/^void cdcacm_write_char(char c)$/;"	f
clamp	life.c	/^static uint8_t clamp(int val)$/;"	f	file:
clock_init	wordclock.c	/^static void clock_init(void)$/;"	f	file:
clock_setup	systick_blink.c	/^static void clock_setup(void)$/;"	f	file:
clock_tick_next	wordclock.c	/^static unsigned int clock_tick_next;$/;"	v	file:
clock_worker	wordclock.c	/^static void clock_worker(void)$/;"	f	file:
cnt	ticker.c	/^static volatile uint32_t cnt;$/;"	v	file:
comm_endp	cdcacm.c	/^static const struct usb_endpoint_descriptor comm_endp[] = {{$/;"	v	typeref:struct:usb_endpoint_descriptor	file:
comm_iface	cdcacm.c	/^static const struct usb_interface_descriptor comm_iface[] = {{$/;"	v	typeref:struct:usb_interface_descriptor	file:
config	cdcacm.c	/^static const struct usb_config_descriptor config = {$/;"	v	typeref:struct:usb_config_descriptor	file:
console_getc	console.c	/^uint32_t console_getc(void)$/;"	f
console_printf	console.c	/^void console_printf(const char *format, ...)$/;"	f
console_printf	console.h	/^static inline void console_printf(const char *format, ...)$/;"	f
console_putc	console.c	/^void console_putc(const char c)$/;"	f
console_puts	console.c	/^void console_puts(const char *buf)$/;"	f
cpu_relax	ticker.h	/^static inline void cpu_relax(void)$/;"	f
data_endp	cdcacm.c	/^static const struct usb_endpoint_descriptor data_endp[] = {{$/;"	v	typeref:struct:usb_endpoint_descriptor	file:
data_iface	cdcacm.c	/^static const struct usb_interface_descriptor data_iface[] = {{$/;"	v	typeref:struct:usb_interface_descriptor	file:
dev	cdcacm.c	/^static const struct usb_device_descriptor dev = {$/;"	v	typeref:struct:usb_device_descriptor	file:
direction	dots.c	/^	uint8_t direction;$/;"	m	struct:dot_s	file:
disp_clean	disp.c	/^void disp_clean(void)$/;"	f
disp_get	disp.c	/^uint8_t disp_get(int col, int row)$/;"	f
disp_init	disp.c	/^void disp_init(void)$/;"	f
disp_kick	disp.c	/^static void disp_kick(void)$/;"	f	file:
disp_out_init	disp.c	/^static void disp_out_init(void) $/;"	f	file:
disp_row_dmabuf	disp.c	/^static uint16_t disp_row_dmabuf[DISP_ROWS_NUM][DMA_ROW_LEN];$/;"	v	file:
disp_row_update	disp.c	/^static void disp_row_update(int row_num)$/;"	f	file:
disp_set	disp.c	/^void disp_set(int col, int row, uint8_t val)$/;"	f
disp_set_noupdate	disp.c	/^void disp_set_noupdate(int col, int row, uint8_t val)$/;"	f
disp_spi_init	disp_spi.c	/^void disp_spi_init(void)$/;"	f
disp_state	disp.c	/^static uint8_t disp_state[DISP_ROWS_NUM][DISP_COLS_NUM];$/;"	v	file:
disp_update_rows	disp.c	/^void disp_update_rows(void)$/;"	f
display_word	wordclock.c	/^static void display_word(int ci, uint8_t val)$/;"	f	file:
dot_s	dots.c	/^typedef struct dot_s {$/;"	s	file:
dot_t	dots.c	/^} dot_t;$/;"	t	typeref:struct:dot_s	file:
dots	dots.c	/^static dot_t dots[MAX_DOTS];$/;"	v	file:
dots_init	dots.c	/^void dots_init(void)$/;"	f
dots_num	dots.c	/^static uint8_t dots_num;$/;"	v	file:
dots_tick	dots.c	/^static void dots_tick(void)$/;"	f	file:
dots_tick_next	dots.c	/^static unsigned int dots_tick_next;$/;"	v	file:
dots_worker	dots.c	/^void dots_worker(void)$/;"	f
draw	wordclock.c	/^static void draw(const uint8_t *ca, uint8_t val)$/;"	f	file:
edge_invert	life.c	/^static const int edge_invert[NUM_EDGES][NUM_EDGES] = {$/;"	v	file:
gamma18_lut	disp.c	/^static const uint8_t gamma18_lut[COLOR_DEPTH] = {$/;"	v	file:
gamma_lookup	disp.c	/^static uint8_t gamma_lookup(uint8_t val)$/;"	f	file:
get_char	usart_buffered.c	/^uint32_t get_char(uint8_t u)$/;"	f
get_final_char	life.c	/^static uint32_t get_final_char(int u)$/;"	f	file:
gpio_setup	systick_blink.c	/^static void gpio_setup(void)$/;"	f	file:
grey	main.c	/^static const uint8_t grey [1][8][8] = {$/;"	v	file:
header	cdcacm.c	/^	struct usb_cdc_header_descriptor header;$/;"	m	struct:__anon2	typeref:struct:__anon2::usb_cdc_header_descriptor	file:
hide_dots	dots.c	/^static void hide_dots(void)$/;"	f	file:
ifaces	cdcacm.c	/^static const struct usb_interface ifaces[] = {{$/;"	v	typeref:struct:usb_interface	file:
init	applet.h	/^	void (*init)(void);$/;"	m	struct:applet
init_edges	life.c	/^static void init_edges(void)$/;"	f	file:
invert	life.c	/^	int invert;$/;"	m	struct:__anon1	file:
last_life	life.c	/^static int last_life;$/;"	v	file:
led_init	main.c	/^void led_init(void)$/;"	f
led_off	main.c	/^static void led_off(void)$/;"	f	file:
led_on	main.c	/^static void led_on(void)$/;"	f	file:
life	life.c	/^applet_add(life);$/;"	v
life_applet	life.c	/^static const struct applet life_applet = {$/;"	v	typeref:struct:applet	file:
life_generation	life.c	/^static int life_generation;$/;"	v	file:
life_init	life.c	/^static void life_init(void)$/;"	f	file:
life_tick	life.c	/^static void life_tick(void)$/;"	f	file:
life_tick_interv	life.c	/^static int life_tick_interv;$/;"	v	file:
life_tick_mult	life.c	/^static unsigned int life_tick_mult;$/;"	v	file:
life_tick_next	life.c	/^static unsigned int life_tick_next;$/;"	v	file:
life_unchanged	life.c	/^static int life_unchanged;$/;"	v	file:
life_worker	life.c	/^static void life_worker(void)$/;"	f	file:
main	main.c	/^int main(void)$/;"	f
main	systick_blink.c	/^int main(void)$/;"	f
mco_setup	systick_blink.c	/^static void mco_setup(void)$/;"	f	file:
move_dots	dots.c	/^static void move_dots(void)$/;"	f	file:
num	life.c	/^	int num;$/;"	m	struct:__anon1	file:
print_grey	main.c	/^static void print_grey(uint8_t num)$/;"	f	file:
print_smile	main.c	/^static void print_smile(uint8_t num)$/;"	f	file:
rand_get	rand.c	/^uint32_t rand_get(void)$/;"	f
rand_init	rand.c	/^void rand_init(void)$/;"	f
rand_tick	rand.c	/^void rand_tick(void)$/;"	f
rand_worker	rand.c	/^void rand_worker(void)$/;"	f
random	rand.c	/^static uint32_t random[1];$/;"	v	file:
receive_msg	life.c	/^static void receive_msg(void)$/;"	f	file:
receive_new	dots.c	/^static void receive_new(void)$/;"	f	file:
reg_base	usart_buffered.c	/^	uint32_t reg_base;$/;"	m	struct:usart	file:
revers8bit	life.c	/^static uint8_t revers8bit(uint8_t x)$/;"	f	file:
rp	cdcacm.c	/^	volatile uint32_t rp;$/;"	m	struct:cdcacm_buffer	file:
rp	usart_buffered.c	/^	volatile uint32_t rp;$/;"	m	struct:usart_buffer	file:
rtc	rtc.c	/^applet_add(rtc);$/;"	v
rtc_applet	rtc.c	/^static const struct applet rtc_applet = {$/;"	v	typeref:struct:applet	file:
rtc_init	rtc.c	/^static void rtc_init(void)$/;"	f	file:
rtc_set_time	rtc.c	/^static void rtc_set_time(unsigned int time)$/;"	f	file:
rtc_worker	rtc.c	/^static void rtc_worker(void)$/;"	f	file:
rxbuf	usart_buffered.c	/^	struct usart_buffer rxbuf;$/;"	m	struct:usart	typeref:struct:usart::usart_buffer	file:
scheduled_cleanup	life.c	/^static int scheduled_cleanup;$/;"	v	file:
seeding	life.c	/^static int seeding;$/;"	v	file:
send_char	usart_buffered.c	/^void send_char(uint8_t u, uint8_t c)$/;"	f
send_edge_msg	life.c	/^static void send_edge_msg(int u, uint8_t edge_state)$/;"	f	file:
show_board	life.c	/^static void show_board(void)$/;"	f	file:
show_dots	dots.c	/^static void show_dots(void)$/;"	f	file:
smileys	main.c	/^static const uint8_t smileys [1][8][8] = {$/;"	v	file:
spi_dma_init	spi_dma.c	/^void spi_dma_init(void)$/;"	f
spi_dma_start	spi_dma.c	/^void spi_dma_start(void *data, int data_size)$/;"	f
sys_tick_handler	systick_blink.c	/^void sys_tick_handler(void)$/;"	f
sys_tick_handler	ticker.c	/^void sys_tick_handler(void)$/;"	f
systick_setup	systick_blink.c	/^static void systick_setup(int xms)$/;"	f	file:
ticker_get_ticks	ticker.c	/^unsigned int ticker_get_ticks(void)$/;"	f
ticker_init	ticker.c	/^void ticker_init(void)$/;"	f
ticker_msleep	ticker.c	/^void ticker_msleep(uint32_t msec)$/;"	f
ticker_tick	ticker.c	/^static void ticker_tick(void)$/;"	f	file:
transmit_edges	life.c	/^static void transmit_edges(void)$/;"	f	file:
txbuf	usart_buffered.c	/^	struct usart_buffer txbuf;$/;"	m	struct:usart	typeref:struct:usart::usart_buffer	file:
update_edge	life.c	/^static void update_edge(enum board_edge edge, uint8_t edge_state, int invert)$/;"	f	file:
update_life_tick	life.c	/^static void update_life_tick(enum board_edge from_edge)$/;"	f	file:
update_mask	wordclock.c	/^static void update_mask(uint8_t mask[8], enum words word)$/;"	f	file:
usart	life.c	/^} usart[NUM_EDGES] = {$/;"	v	typeref:struct:__anon1	file:
usart	usart_buffered.c	/^static struct usart {$/;"	s	file:
usart1_isr	usart_buffered.c	/^void usart1_isr(void)$/;"	f
usart2_isr	usart_buffered.c	/^void usart2_isr(void)$/;"	f
usart3_4_isr	usart_buffered.c	/^void usart3_4_isr(void)$/;"	f
usart_buf_clear	usart_buffered.c	/^void usart_buf_clear(int u)$/;"	f
usart_buf_empty	usart_buffered.c	/^static int usart_buf_empty(struct usart_buffer *buf)$/;"	f	file:
usart_buf_full	usart_buffered.c	/^static int usart_buf_full(struct usart_buffer *buf)$/;"	f	file:
usart_buf_get	usart_buffered.c	/^static uint32_t usart_buf_get(struct usart_buffer *buf)$/;"	f	file:
usart_buf_put	usart_buffered.c	/^static void usart_buf_put(struct usart_buffer *buf, uint8_t val)$/;"	f	file:
usart_buffer	usart_buffered.c	/^struct usart_buffer {$/;"	s	file:
usart_init	usart_buffered.c	/^void usart_init(void)$/;"	f
usart_isr_common	usart_buffered.c	/^static void usart_isr_common(int usart_idx)$/;"	f	file:
usart_num	usart_buffered.c	/^static int usart_num;$/;"	v	file:
usart_setup	usart_buffered.c	/^static void usart_setup($/;"	f	file:
usarts	usart_buffered.c	/^} usarts[4];$/;"	v	typeref:struct:usart	file:
usb_isr	cdcacm.c	/^void usb_isr(void)$/;"	f
usb_setup	cdcacm.c	/^static void usb_setup(void)$/;"	f	file:
usb_strings	cdcacm.c	/^static const char *usb_strings[] = {$/;"	v	file:
usbd_control_buffer	cdcacm.c	/^uint8_t usbd_control_buffer[128];$/;"	v
used	dots.c	/^	uint8_t used;$/;"	m	struct:dot_s	file:
word_current	wordclock.c	/^static enum words word_current;$/;"	v	typeref:enum:words	file:
wordclock	wordclock.c	/^applet_add(wordclock);$/;"	v
wordclock_applet	wordclock.c	/^static const struct applet wordclock_applet = {$/;"	v	typeref:struct:applet	file:
words	wordclock.c	/^enum words {$/;"	g	file:
words	wordclock.c	/^static const uint8_t words[][8] = {$/;"	v	file:
worker	applet.h	/^	void (*worker)(void);$/;"	m	struct:applet
worker_state	life.c	/^enum worker_state {$/;"	g	file:
worker_state	life.c	/^static enum worker_state worker_state;$/;"	v	typeref:enum:worker_state	file:
worker_state	rtc.c	/^enum worker_state {$/;"	g	file:
worker_state	rtc.c	/^static enum worker_state worker_state;$/;"	v	typeref:enum:worker_state	file:
wp	cdcacm.c	/^	volatile uint32_t wp;$/;"	m	struct:cdcacm_buffer	file:
wp	usart_buffered.c	/^	volatile uint32_t wp;$/;"	m	struct:usart_buffer	file:
x	dots.c	/^	uint8_t x;$/;"	m	struct:dot_s	file:
xorshift32	rand.c	/^static uint32_t xorshift32(uint32_t state[static 1])$/;"	f	file:
y	dots.c	/^	uint8_t y;$/;"	m	struct:dot_s	file:
